!function(n){var o={};function i(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=n,i.c=o,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(n,o,function(e){return t[e]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s="./src/index.js")}({"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */function(module,exports){eval("(function () {\n  window.onload = function () {\n    //cookies中存储的li缓存名\n    var storageKey = 'todoList';\n    var todos = [];\n    var $todoList = document.querySelector('.todo-list');\n    var $main = document.querySelector('.main');\n    var $newTodo = document.querySelector('.new-todo');\n    var $toggleAll = document.querySelector('.toggle-all'); //声明存储内存函数\n\n    function setLocalStorage(name, value) {\n      return localStorage.setItem(name, JSON.stringify(value));\n    } //声明读取内存函数\n\n\n    function getLocalStorage(name) {\n      return JSON.parse(localStorage.getItem(name));\n    } //声明li模板函数，每次更改之后用作渲染调用\n\n\n    function itemList(items) {\n      return items.reduce(function (a, item) {\n        return a + \"\\n                <li data-id=\\\"\".concat(item.id, \"\\\"\").concat(item.completed ? ' class=\"completed\"' : '', \">\\n                \\t<div class=\\\"view\\\">\\n                \\t\\t<input class=\\\"toggle\\\" type=\\\"checkbox\\\" \").concat(item.completed ? 'checked' : '', \">\\n                \\t\\t<label>\").concat(item.title, \"</label>\\n                \\t\\t<button class=\\\"destroy\\\"></button>\\n                \\t</div>\\n                </li>\");\n      }, '');\n    } //页面渲染函数\n\n\n    function render() {\n      var liList = itemList(todos);\n      $todoList.innerHTML = liList;\n\n      if (todos.length > 0) {\n        $main.style.display = 'block';\n      } else {\n        $main.style.display = 'none';\n      }\n    } //功能1 页面加载完成后查询内存中是否有li缓存，若有则渲染页面\n\n\n    if (!localStorage.getItem(storageKey)) {\n      localStorage.setItem(storageKey, JSON.stringify(todos));\n      render();\n    } else {\n      todos = JSON.parse(localStorage.getItem(storageKey));\n      render();\n    } //渲染页面 渲染之前加一个判断 如果todos.length>0 那就把main 变为block\n    //功能2 添加编辑功能\n\n\n    $newTodo.onkeydown = function (event) {\n      if (event.keyCode == '13') {\n        var title = $newTodo.value;\n        $newTodo.value = '';\n\n        if (title.trim() === '') {\n          return;\n        }\n\n        var item = {\n          id: Date.now(),\n          title: title,\n          completed: false\n        };\n        todos = getLocalStorage(storageKey);\n        todos.push(item);\n        setLocalStorage(storageKey, todos);\n        render();\n      } else if (event.keyCode == '27') {\n        $newTodo.value = '';\n      }\n    }; //功能3 当点击 .toggle-all的时候 所有的li都标记为completed\n\n\n    $toggleAll.onclick = function () {\n      todos = getLocalStorage(storageKey);\n\n      if ($toggleAll.checked === true) {\n        todos.forEach(function (item) {\n          item.completed = true;\n          setLocalStorage(storageKey, todos);\n          render();\n        });\n      } else {\n        todos.forEach(function (item) {\n          item.completed = false;\n          setLocalStorage(storageKey, todos);\n          render();\n        });\n      }\n    }; //功能4 当点击 .toggle的时候 li标记为completed\n    //功能5 当点击 .destroy的时候 移除li\n\n\n    $todoList.addEventListener('click', function (event) {\n      todos = getLocalStorage(storageKey);\n      var targetElement = event.target;\n      var listItem = targetElement.parentNode.parentNode;\n      var toggleId = listItem.dataset.id;\n\n      if (targetElement.tagName === 'INPUT') {\n        todos.forEach(function (item, index) {\n          if (item.id === parseInt(toggleId)) {\n            item.completed = !item.completed;\n            setLocalStorage(storageKey, todos);\n            render();\n          }\n        });\n      } else if (targetElement.tagName === 'BUTTON') {\n        todos.forEach(function (item, index) {\n          if (item.id === parseInt(toggleId)) {\n            todos.splice(index, 1);\n            setLocalStorage(storageKey, todos);\n            render();\n          }\n        });\n      }\n    }); //功能6 双击li时显示编辑框\n    //存储操作函数\n\n    var editHandler = function editHandler(event) {\n      $todoList.removeEventListener('dblclick', editHandler);\n      todos = getLocalStorage(storageKey);\n      var target = event.target;\n      var listItem = target.parentElement.parentElement;\n\n      if (!listItem) {\n        return;\n      }\n\n      var itemId = listItem.dataset.id;\n      listItem.classList.add('editing');\n      var input = document.createElement('input');\n      input.className = 'edit';\n      var title = input.value = target.innerText;\n      listItem.appendChild(input);\n      input.focus();\n\n      input.onkeydown = function (event) {\n        if (event.keyCode == '13' || event.keyCode == '27') {\n          var newInput = listItem.querySelector('input.edit');\n          title = newInput.value;\n          listItem.removeChild(newInput);\n          listItem.classList.remove('editing');\n          listItem.querySelector('label').textContent = title;\n          todos.forEach(function (item) {\n            if (item.id === parseInt(itemId)) {\n              item.title = title;\n              setLocalStorage(storageKey, todos);\n              render();\n            }\n          });\n        }\n\n        $todoList.addEventListener('dblclick', editHandler);\n      };\n    };\n\n    $todoList.addEventListener('dblclick', editHandler);\n  };\n})();\n\n//# sourceURL=webpack:///./src/index.js?")}});